<?php

function mix($path)
{
    $version = file_get_contents(public_path() . "/version.txt");
    return $path . "?v=" . $version;
}

function domain($isProtocol = false, $isPort = false)
{
    if (!$isProtocol) {
        return request()->host(true);
    }

    return env('APP_PROTOCOL', 'https') . "://" . request()->host($isPort);
}

function getRealIp()
{
    $clientIp = null;
    if (request()->header('x-forwarded-for') != null) {
        $clientIp = explode(',', request()->header('x-forwarded-for'))[0];
    } elseif (request()->header('cf-connecting-ip') != null) {
        $clientIp = request()->header('cf-connecting-ip');
    } elseif (request()->header('HTTP_X_FORWARED_FOR') != null) {
        $clientIp = request()->header('HTTP_X_FORWARED_FOR');
    } elseif (request()->header('HTTP_CLIENT_IP') != null) {
        $clientIp = request()->header('HTTP_CLIENT_IP');
    } else {
        if (request()->header('REMOTE_ADDR') != null) {
            $clientIp = request()->header('REMOTE_ADDR');
        }
    }
    return $clientIp;
}

function can(string $rule)
{
    $ruleString = \support\Cache::get('ruleString_' . session('auth_token'));
    if (empty($ruleString) || !$rule) {
        return false;
    }
    // 是否含有 ,$rule 這個字串
    $rule = ',' . $rule;
    return strpos($ruleString, $rule) !== false;
}

function isUserGroup(string $alias)
{
    $userGroupAlias = \support\Cache::get('userGroupAlias_' . session('auth_token'));
    if (empty($userGroupAlias) || !$alias) {
        return false;
    }
    return $userGroupAlias === $alias;
}

function vite(string | array $entrypoints, string | null $buildDirectory = 'build')
{
    $style_pattern = '/\.(css|less|sass|scss|styl|stylus|pcss|postcss)$/';

    if (!is_array($entrypoints)) {
        $entrypoints = [$entrypoints];
    }

    $html = '';
    if (is_file(public_path('hot'))) {
        $host = rtrim(file_get_contents(public_path('hot')));
        array_unshift($entrypoints, '@vite/client');
        foreach ($entrypoints as $import) {
            if (preg_match($style_pattern, $import)) {
                $html .= '<link rel="stylesheet" href="' . $host . '/' . $import . '" />';
            } else {
                $html .= '<script type="module" src="' . $host . '/' . $import . '"></script>';
            }
        }
    } else {
        $manifestPath = public_path($buildDirectory . DIRECTORY_SEPARATOR . 'manifest.json');
        if (is_file($manifestPath)) {
            $manifest = json_decode(file_get_contents($manifestPath), true);
            $tags = [];
            $preloads = [];
            foreach ($entrypoints as $entrypoint) {
                if (isset($manifest[$entrypoint])) {
                    $chunk = $manifest[$entrypoint];
                    array_push($preloads, $chunk['file']);
                    array_push($tags, $chunk['file']);

                    foreach ($chunk['imports'] ?? [] as $import) {
                        array_push($preloads, $manifest[$import]['file']);
                        foreach ($manifest[$import]['css'] ?? [] as $css) {
                            array_push($preloads, $css);
                            array_push($tags, $css);
                        }
                    }

                    foreach ($chunk['css'] ?? [] as $css) {
                        array_push($preloads, $css);
                        array_push($tags, $css);
                    }
                }
            }
            uasort($preloads, fn($a, $b) => (preg_match($style_pattern, $a)) ? -1 : 1);
            uasort($tags, fn($a, $b) => (preg_match($style_pattern, $a)) ? -1 : 1);
            foreach ($preloads as $preload) {
                if (preg_match($style_pattern, $preload)) {
                    $html .= '<link rel="preload" as="style" href="' . ('/' . $buildDirectory . '/' . $preload) . '" />';
                } else {
                    $html .= '<link rel="modulepreload" as="script" href="' . ('/' . $buildDirectory . '/' . $preload) . '" />';
                }
            }
            foreach ($tags as $tag) {
                if (preg_match($style_pattern, $tag)) {
                    $html .= '<link rel="stylesheet" href="' . ('/' . $buildDirectory . '/' . $tag) . '" />';
                } else {
                    $html .= '<script type="module" src="' . ('/' . $buildDirectory . '/' . $tag) . '"></script>';
                }
            }
        }
    }
    return $html;
}
